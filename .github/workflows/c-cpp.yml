name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libncurses5-dev libncursesw5-dev
        wget https://github.com/tommyettinger/BearLibTerminal/releases/download/v0.12.1/bearlibterminal_0121.tar.bz2
        tar -xjf bearlibterminal_0121.tar.bz2
        sudo cp -r bearlibterminal_0121/Include/C/BearLibTerminal.h /usr/local/include/
        sudo cp -r bearlibterminal_0121/Linux64/libBearLibTerminal.so /usr/local/lib/
        sudo ldconfig

    - name: Set up dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install make
        wget https://github.com/tommyettinger/BearLibTerminal/releases/download/v0.12.1/bearlibterminal_0121.zip -OutFile bearlibterminal_0121.zip
        Expand-Archive -Path bearlibterminal_0121.zip -DestinationPath bearlibterminal
        xcopy /y /s bearlibterminal\Include\C\BearLibTerminal.h .\inc
        xcopy /y /s bearlibterminal\Windows64\BearLibTerminal.lib .\lib\win32
        xcopy /y /s bearlibterminal\Windows64\BearLibTerminal.dll .\build\win32

    - name: Create Build Directories
      run: |
        mkdir -p build/linux
        mkdir -p build/win32
        cp -r res build/linux/
        cp -r res build/win32/

    - name: Build on Linux
      if: matrix.os == 'ubuntu-latest'
      run: make

    - name: Build on Windows
      if: matrix.os == 'windows-latest'
      run: make CC=gcc

    - name: Run Tests on Linux
      if: matrix.os == 'ubuntu-latest'
      run: make check

    - name: Run Tests on Windows
      if: matrix.os == 'windows-latest'
      run: make check

    - name: Distcheck on Linux
      if: matrix.os == 'ubuntu-latest'
      run: make distcheck

    - name: Distcheck on Windows
      if: matrix.os == 'windows-latest'
      run: make distcheck
